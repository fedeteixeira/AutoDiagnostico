/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package autodiagnostico;
import fuentes.Fuentes;
import java.awt.Font;
import Animacion.*;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import org.jpl7.Query;
import org.jpl7.Term;
/**
 *
 * @author Federico Teixeira G
 */
public class DiagnosticoFrame extends javax.swing.JFrame {

    public Fuentes tipofuente;
    public java.util.Map<String,Term>[] solution;
    public DefaultListModel modelo;
    
    public DiagnosticoFrame() { /*Se obtendrá un listado de todas las posibles fallas,
        causas y soluciones y se almacenará en el arreglo solution para luego imprimir 
        las fallas en una lista para que se puedan seleccionar y consultar posteriormente*/
        modelo = new DefaultListModel(); //En este objeto se almacenarán las lineas que se mostrarán en la lista de fallas 
        tipofuente= new Fuentes();
        try {
            String conexion = "consult('proyecto.pl')"; //Abre el archivo prolog
            Query con = new Query(conexion); 
            con.hasMoreSolutions();//Se necesita hacer una consulta con el nombre del archivo prolog para que se active dicho archivo

            String consul = "falla(X,Y,Z)."; //Con una falla tomada del arreglo busca X y Y
            Query ejecutar = new Query(consul); 
            solution = ejecutar.allSolutions(); /*Guarda en el arreglo solution todas las soluciones 
            a la consulta falla(X,Y,Z) es decir, todos los casos posibles, para obtener la causa, por
            ejemplo, de la falla en la posicion 1 se haria así:
            solution[1].get("Y").toString();
            get("Y") regresa un objeto del tipo Term que contiene la causa*/
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        initComponents();
        listaFallas.setModel(modelo); //Se agrega el modelo (con las fallas ya agregadas) a la lista para poder mostrarlas
        setLocationRelativeTo(null); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDiaFrame = new javax.swing.JPanel();
        panelFalla = new javax.swing.JPanel();
        lFalla = new javax.swing.JLabel();
        lSeleccionarfalla = new javax.swing.JLabel();
        panelDiagnosticar = new javax.swing.JPanel();
        lDiagnosticar = new javax.swing.JLabel();
        JScrollPane1 = new javax.swing.JScrollPane();
        listaFallas = new javax.swing.JList<>();
        panelSalir = new javax.swing.JPanel();
        lSalir = new javax.swing.JLabel();
        limagenizquierda = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Autodiagnóstico");
        setIconImage(new ImageIcon(getClass().getResource("/assets/wrench.png")).getImage());
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(600, 400));
        setResizable(false);
        getContentPane().setLayout(null);

        panelDiaFrame.setBackground(new java.awt.Color(153, 153, 153));
        panelDiaFrame.setMinimumSize(new java.awt.Dimension(600, 400));
        panelDiaFrame.setPreferredSize(new java.awt.Dimension(600, 400));
        panelDiaFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelDiaFrameMousePressed(evt);
            }
        });
        panelDiaFrame.setLayout(null);

        panelFalla.setBackground(new java.awt.Color(51, 51, 51));
        panelFalla.setLayout(null);

        lFalla.setFont(tipofuente.fuente(tipofuente.CENTURY,Font.BOLD,18));
        lFalla.setForeground(new java.awt.Color(255, 255, 255));
        lFalla.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lFalla.setText("FALLA");
        panelFalla.add(lFalla);
        lFalla.setBounds(-150, 10, 160, 20);
        if((lFalla.getX()+(lFalla.getWidth())) < 600){
            Animacion.mover_derecha(lFalla.getX(), 50, 2, 1, lFalla);
        }

        lSeleccionarfalla.setFont(tipofuente.fuente(tipofuente.CENTURY,0,14));
        lSeleccionarfalla.setForeground(new java.awt.Color(255, 255, 255));
        lSeleccionarfalla.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lSeleccionarfalla.setText("SELECCIONE SU FALLA");
        panelFalla.add(lSeleccionarfalla);
        lSeleccionarfalla.setBounds(-150, 30, 210, 20);
        if((lSeleccionarfalla.getX()+(lSeleccionarfalla.getWidth())) < 600){
            Animacion.mover_derecha(lSeleccionarfalla.getX(), 50, 2, 1, lSeleccionarfalla);
        }

        panelDiaFrame.add(panelFalla);
        panelFalla.setBounds(0, 20, 800, 50);

        panelDiagnosticar.setBackground(new java.awt.Color(153, 0, 0));
        panelDiagnosticar.setLayout(null);

        lDiagnosticar.setBackground(new java.awt.Color(255, 255, 255));
        lDiagnosticar.setFont(tipofuente.fuente(tipofuente.CENTURY,0,14));
        lDiagnosticar.setForeground(new java.awt.Color(204, 204, 204));
        lDiagnosticar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lDiagnosticar.setText("DIAGNOSTICAR");
        lDiagnosticar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lDiagnosticarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lDiagnosticarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lDiagnosticarMousePressed(evt);
            }
        });
        panelDiagnosticar.add(lDiagnosticar);
        lDiagnosticar.setBounds(0, 0, 170, 50);

        panelDiaFrame.add(panelDiagnosticar);
        panelDiagnosticar.setBounds(520, 400, 170, 50);

        JScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        JScrollPane1.setToolTipText("");

        listaFallas.setFont(tipofuente.fuente(tipofuente.CENTURY,0,14));
        listaFallas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaFallas.setSelectionBackground(new java.awt.Color(51, 51, 51));
        listaFallas.setVisibleRowCount(2);
        for(int i=0; i<solution.length; i++){ //Extrae fallas de la lista de soluciones para mostrarlas en pantalla mediante un jList
            if (!modelo.contains(solution[i].get("X").toString())) //Si el modelo de la lista NO contiene la falla (get(X).toString() retorna una falla como un string)de la lista de soluciones entonces
            modelo.addElement(solution[i].get("X").toString()); //Se agrega al modelo de la lista la nueva falla
        } 

        listaFallas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaFallasMousePressed(evt);
            }
        });
        JScrollPane1.setViewportView(listaFallas);

        panelDiaFrame.add(JScrollPane1);
        JScrollPane1.setBounds(130, 90, 660, 290);

        panelSalir.setBackground(new java.awt.Color(153, 0, 0));
        panelSalir.setLayout(null);

        lSalir.setBackground(new java.awt.Color(255, 255, 255));
        lSalir.setFont(tipofuente.fuente(tipofuente.CENTURY,0,14));
        lSalir.setForeground(new java.awt.Color(255, 255, 255));
        lSalir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lSalir.setText("SALIR");
        lSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lSalirMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lSalirMousePressed(evt);
            }
        });
        panelSalir.add(lSalir);
        lSalir.setBounds(0, 0, 170, 50);

        panelDiaFrame.add(panelSalir);
        panelSalir.setBounds(240, 400, 170, 50);

        limagenizquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/side_image.gif"))); // NOI18N
        panelDiaFrame.add(limagenizquierda);
        limagenizquierda.setBounds(0, 0, 120, 530);

        getContentPane().add(panelDiaFrame);
        panelDiaFrame.setBounds(0, 0, 800, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaFallasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaFallasMousePressed
        if(listaFallas.getSelectedIndex()!=-1){ //Si hay por lo menos un elemento seleccionado
           lDiagnosticar.setForeground(new  java.awt.Color(255,255,255));
        }
    }//GEN-LAST:event_listaFallasMousePressed

    private void panelDiaFrameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelDiaFrameMousePressed
        listaFallas.clearSelection(); //Se deselecciona cualquier elemento en la lista
        lDiagnosticar.setForeground(new  java.awt.Color(204,204,204));
        panelDiagnosticar.setBackground(new  java.awt.Color(153,0,0));
    }//GEN-LAST:event_panelDiaFrameMousePressed

    private void lSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lSalirMouseEntered
        panelSalir.setBackground(new  java.awt.Color(204,0,51));
    }//GEN-LAST:event_lSalirMouseEntered

    private void lSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lSalirMouseExited
        panelSalir.setBackground(new  java.awt.Color(153,0,0));
    }//GEN-LAST:event_lSalirMouseExited

    private void lDiagnosticarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lDiagnosticarMouseExited
        if(listaFallas.getSelectedIndex()!=-1){
            panelDiagnosticar.setBackground(new  java.awt.Color(153,0,0));
        }
    }//GEN-LAST:event_lDiagnosticarMouseExited

    private void lDiagnosticarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lDiagnosticarMouseEntered
        if(listaFallas.getSelectedIndex()!=-1){
            panelDiagnosticar.setBackground(new  java.awt.Color(204,0,51));
        }
    }//GEN-LAST:event_lDiagnosticarMouseEntered

    private void lSalirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lSalirMousePressed
        new InicioFrame().setVisible(true); //Hace visible el frame inicio
        dispose(); //Elimina el frame actual
    }//GEN-LAST:event_lSalirMousePressed

    private void lDiagnosticarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lDiagnosticarMousePressed
        
        if(listaFallas.getSelectedIndex()!=-1){ //Si hay un elemento seleccionado en la lista
            new SolucionFrame(listaFallas.getSelectedValue()).setVisible(true); //Envia el indice de la falla al frame solucion ademas de hacerlo visible
            dispose(); //Elimina el frame actual
        }
    }//GEN-LAST:event_lDiagnosticarMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagnosticoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagnosticoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagnosticoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagnosticoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DiagnosticoFrame().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane1;
    private javax.swing.JLabel lDiagnosticar;
    private javax.swing.JLabel lFalla;
    private javax.swing.JLabel lSalir;
    private javax.swing.JLabel lSeleccionarfalla;
    private javax.swing.JLabel limagenizquierda;
    private javax.swing.JList<String> listaFallas;
    private javax.swing.JPanel panelDiaFrame;
    private javax.swing.JPanel panelDiagnosticar;
    private javax.swing.JPanel panelFalla;
    private javax.swing.JPanel panelSalir;
    // End of variables declaration//GEN-END:variables
}
